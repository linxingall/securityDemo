<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linx.persistence.SysResourcesDao">
     <resultMap id="BaseResultMap" type="com.linx.model.SysResourcesDo">
          <id column="RESOURCE_ID" jdbcType="VARCHAR" property="resourceId" />
          <result column="RESOURCE_TYPE" jdbcType="VARCHAR" property="resourceType" />
          <result column="RESOURCE_NAME" jdbcType="VARCHAR" property="resourceName" />
          <result column="RESOURCE_DESC" jdbcType="VARCHAR" property="resourceDesc" />
          <result column="RESOURCE_PATH" jdbcType="VARCHAR" property="resourcePath" />
          <result column="PRIORITY" jdbcType="VARCHAR" property="priority" />
          <result column="ENABLE" jdbcType="INTEGER" property="enable" />
          <result column="ISSYS" jdbcType="INTEGER" property="issys" />
          <result column="MODULE_ID" jdbcType="VARCHAR" property="moduleId" />
     </resultMap>
     <sql id="Query_Where_Clause">
          <where>
               <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Update_By_Query_Where_Clause">
          <where>
               <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Base_Column_List">
          RESOURCE_ID, RESOURCE_TYPE, RESOURCE_NAME, RESOURCE_DESC, RESOURCE_PATH, PRIORITY, 
          ENABLE, ISSYS, MODULE_ID
     </sql>
     <select id="selectByQuery" parameterType="com.linx.model.SysResourcesQuery" resultMap="BaseResultMap">
          select
          <if test="distinct">
               distinct
          </if>
          <include refid="Base_Column_List" />
          from sys_resources
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
          <if test="orderByClause != null">
               order by ${orderByClause}
          </if>
     </select>

     <resultMap id="SysResourceAuthMap" type="com.linx.entity.SysResourceAuth">
          <id column="resource_path" jdbcType="VARCHAR" property="resourcePath" />
          <result column="authority_mark" jdbcType="VARCHAR" property="authorityMark" />
     </resultMap>
     <select id="getURLResourceMapping"  resultMap="SysResourceAuthMap">
          SELECT S3.RESOURCE_PATH resource_path,S2.AUTHORITY_MARK authority_mark
           FROM SYS_AUTHORITIES_RESOURCES S1
          JOIN SYS_AUTHORITIES S2 ON S1.AUTHORITY_ID = S2.AUTHORITY_ID
          JOIN SYS_RESOURCES S3 ON S1.RESOURCE_ID = S3.RESOURCE_ID
           where S3.RESOURCE_TYPE='URL'
     </select>
     <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
          select 
          <include refid="Base_Column_List" />
          from sys_resources
          where RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
     </select>
     <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
          delete from sys_resources
          where RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
     </delete>
     <delete id="deleteByQuery" parameterType="com.linx.model.SysResourcesQuery">
          delete from sys_resources
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </delete>
     <insert id="insert" parameterType="com.linx.model.SysResourcesDo">
          insert into sys_resources (RESOURCE_ID, RESOURCE_TYPE, RESOURCE_NAME, 
               RESOURCE_DESC, RESOURCE_PATH, PRIORITY, 
               ENABLE, ISSYS, MODULE_ID
               )
          values (#{resourceId,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, 
               #{resourceDesc,jdbcType=VARCHAR}, #{resourcePath,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, 
               #{enable,jdbcType=INTEGER}, #{issys,jdbcType=INTEGER}, #{moduleId,jdbcType=VARCHAR}
               )
     </insert>
     <insert id="insertSelective" parameterType="com.linx.model.SysResourcesDo">
          insert into sys_resources
          <trim prefix="(" suffix=")" suffixOverrides=",">
               <if test="resourceId != null">
                    RESOURCE_ID,
               </if>
               <if test="resourceType != null">
                    RESOURCE_TYPE,
               </if>
               <if test="resourceName != null">
                    RESOURCE_NAME,
               </if>
               <if test="resourceDesc != null">
                    RESOURCE_DESC,
               </if>
               <if test="resourcePath != null">
                    RESOURCE_PATH,
               </if>
               <if test="priority != null">
                    PRIORITY,
               </if>
               <if test="enable != null">
                    ENABLE,
               </if>
               <if test="issys != null">
                    ISSYS,
               </if>
               <if test="moduleId != null">
                    MODULE_ID,
               </if>
          </trim>
          <trim prefix="values (" suffix=")" suffixOverrides=",">
               <if test="resourceId != null">
                    #{resourceId,jdbcType=VARCHAR},
               </if>
               <if test="resourceType != null">
                    #{resourceType,jdbcType=VARCHAR},
               </if>
               <if test="resourceName != null">
                    #{resourceName,jdbcType=VARCHAR},
               </if>
               <if test="resourceDesc != null">
                    #{resourceDesc,jdbcType=VARCHAR},
               </if>
               <if test="resourcePath != null">
                    #{resourcePath,jdbcType=VARCHAR},
               </if>
               <if test="priority != null">
                    #{priority,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    #{moduleId,jdbcType=VARCHAR},
               </if>
          </trim>
     </insert>
     <select id="countByQuery" parameterType="com.linx.model.SysResourcesQuery" resultType="java.lang.Integer">
          select count(*) from sys_resources
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </select>
     <update id="updateByQuerySelective" parameterType="map">
          update sys_resources
          <set>
               <if test="record.resourceId != null">
                    RESOURCE_ID = #{record.resourceId,jdbcType=VARCHAR},
               </if>
               <if test="record.resourceType != null">
                    RESOURCE_TYPE = #{record.resourceType,jdbcType=VARCHAR},
               </if>
               <if test="record.resourceName != null">
                    RESOURCE_NAME = #{record.resourceName,jdbcType=VARCHAR},
               </if>
               <if test="record.resourceDesc != null">
                    RESOURCE_DESC = #{record.resourceDesc,jdbcType=VARCHAR},
               </if>
               <if test="record.resourcePath != null">
                    RESOURCE_PATH = #{record.resourcePath,jdbcType=VARCHAR},
               </if>
               <if test="record.priority != null">
                    PRIORITY = #{record.priority,jdbcType=VARCHAR},
               </if>
               <if test="record.enable != null">
                    ENABLE = #{record.enable,jdbcType=INTEGER},
               </if>
               <if test="record.issys != null">
                    ISSYS = #{record.issys,jdbcType=INTEGER},
               </if>
               <if test="record.moduleId != null">
                    MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
               </if>
          </set>
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByQuery" parameterType="map">
          update sys_resources
          set RESOURCE_ID = #{record.resourceId,jdbcType=VARCHAR},
               RESOURCE_TYPE = #{record.resourceType,jdbcType=VARCHAR},
               RESOURCE_NAME = #{record.resourceName,jdbcType=VARCHAR},
               RESOURCE_DESC = #{record.resourceDesc,jdbcType=VARCHAR},
               RESOURCE_PATH = #{record.resourcePath,jdbcType=VARCHAR},
               PRIORITY = #{record.priority,jdbcType=VARCHAR},
               ENABLE = #{record.enable,jdbcType=INTEGER},
               ISSYS = #{record.issys,jdbcType=INTEGER},
               MODULE_ID = #{record.moduleId,jdbcType=VARCHAR}
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByPrimaryKeySelective" parameterType="com.linx.model.SysResourcesDo">
          update sys_resources
          <set>
               <if test="resourceType != null">
                    RESOURCE_TYPE = #{resourceType,jdbcType=VARCHAR},
               </if>
               <if test="resourceName != null">
                    RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
               </if>
               <if test="resourceDesc != null">
                    RESOURCE_DESC = #{resourceDesc,jdbcType=VARCHAR},
               </if>
               <if test="resourcePath != null">
                    RESOURCE_PATH = #{resourcePath,jdbcType=VARCHAR},
               </if>
               <if test="priority != null">
                    PRIORITY = #{priority,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    ENABLE = #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    ISSYS = #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    MODULE_ID = #{moduleId,jdbcType=VARCHAR},
               </if>
          </set>
          where RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
     </update>
     <update id="updateByPrimaryKey" parameterType="com.linx.model.SysResourcesDo">
          update sys_resources
          set RESOURCE_TYPE = #{resourceType,jdbcType=VARCHAR},
               RESOURCE_NAME = #{resourceName,jdbcType=VARCHAR},
               RESOURCE_DESC = #{resourceDesc,jdbcType=VARCHAR},
               RESOURCE_PATH = #{resourcePath,jdbcType=VARCHAR},
               PRIORITY = #{priority,jdbcType=VARCHAR},
               ENABLE = #{enable,jdbcType=INTEGER},
               ISSYS = #{issys,jdbcType=INTEGER},
               MODULE_ID = #{moduleId,jdbcType=VARCHAR}
          where RESOURCE_ID = #{resourceId,jdbcType=VARCHAR}
     </update>
</mapper>