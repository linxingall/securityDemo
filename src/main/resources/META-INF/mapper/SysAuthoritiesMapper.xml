<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linx.persistence.SysAuthoritiesDao">
     <resultMap id="BaseResultMap" type="com.linx.model.SysAuthoritiesDo">
          <id column="AUTHORITY_ID" jdbcType="VARCHAR" property="authorityId" />
          <result column="AUTHORITY_MARK" jdbcType="VARCHAR" property="authorityMark" />
          <result column="AUTHORITY_NAME" jdbcType="VARCHAR" property="authorityName" />
          <result column="AUTHORITY_DESC" jdbcType="VARCHAR" property="authorityDesc" />
          <result column="MESSAGE" jdbcType="VARCHAR" property="message" />
          <result column="ENABLE" jdbcType="INTEGER" property="enable" />
          <result column="ISSYS" jdbcType="INTEGER" property="issys" />
          <result column="MODULE_ID" jdbcType="VARCHAR" property="moduleId" />
     </resultMap>
     <sql id="Query_Where_Clause">
          <where>
               <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Update_By_Query_Where_Clause">
          <where>
               <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                         <trim prefix="(" prefixOverrides="and" suffix=")">
                              <foreach collection="criteria.criteria" item="criterion">
                                   <choose>
                                        <when test="criterion.noValue">
                                             and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                             and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                             and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                             and ${criterion.condition}
                                             <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                                  #{listItem}
                                             </foreach>
                                        </when>
                                   </choose>
                              </foreach>
                         </trim>
                    </if>
               </foreach>
          </where>
     </sql>
     <sql id="Base_Column_List">
          AUTHORITY_ID, AUTHORITY_MARK, AUTHORITY_NAME, AUTHORITY_DESC, MESSAGE, ENABLE, ISSYS, 
          MODULE_ID
     </sql>
     <select id="selectByQuery" parameterType="com.linx.model.SysAuthoritiesQuery" resultMap="BaseResultMap">
          select
          <if test="distinct">
               distinct
          </if>
          <include refid="Base_Column_List" />
          from sys_authorities
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
          <if test="orderByClause != null">
               order by ${orderByClause}
          </if>
     </select>

     <select id="getSysAuthoritiesByUserId" parameterType="java.lang.String" resultType="java.lang.String">
          select
          a.AUTHORITY_MARK AUTHORITY_MARK
          from sys_users u
          join sys_users_roles ur on u.user_id = ur.user_id
          join sys_roles r on r.role_id=ur.role_id
          join sys_roles_authorities ra on ra.role_id=r.role_id
          join sys_authorities a on ra.authority_id=a.authority_id
          where u.user_id = #{userId,jdbcType=VARCHAR}
     </select>
     <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
          select 
          <include refid="Base_Column_List" />
          from sys_authorities
          where AUTHORITY_ID = #{authorityId,jdbcType=VARCHAR}
     </select>
     <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
          delete from sys_authorities
          where AUTHORITY_ID = #{authorityId,jdbcType=VARCHAR}
     </delete>
     <delete id="deleteByQuery" parameterType="com.linx.model.SysAuthoritiesQuery">
          delete from sys_authorities
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </delete>
     <insert id="insert" parameterType="com.linx.model.SysAuthoritiesDo">
          insert into sys_authorities (AUTHORITY_ID, AUTHORITY_MARK, AUTHORITY_NAME, 
               AUTHORITY_DESC, MESSAGE, ENABLE, 
               ISSYS, MODULE_ID)
          values (#{authorityId,jdbcType=VARCHAR}, #{authorityMark,jdbcType=VARCHAR}, #{authorityName,jdbcType=VARCHAR}, 
               #{authorityDesc,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
               #{issys,jdbcType=INTEGER}, #{moduleId,jdbcType=VARCHAR})
     </insert>
     <insert id="insertSelective" parameterType="com.linx.model.SysAuthoritiesDo">
          insert into sys_authorities
          <trim prefix="(" suffix=")" suffixOverrides=",">
               <if test="authorityId != null">
                    AUTHORITY_ID,
               </if>
               <if test="authorityMark != null">
                    AUTHORITY_MARK,
               </if>
               <if test="authorityName != null">
                    AUTHORITY_NAME,
               </if>
               <if test="authorityDesc != null">
                    AUTHORITY_DESC,
               </if>
               <if test="message != null">
                    MESSAGE,
               </if>
               <if test="enable != null">
                    ENABLE,
               </if>
               <if test="issys != null">
                    ISSYS,
               </if>
               <if test="moduleId != null">
                    MODULE_ID,
               </if>
          </trim>
          <trim prefix="values (" suffix=")" suffixOverrides=",">
               <if test="authorityId != null">
                    #{authorityId,jdbcType=VARCHAR},
               </if>
               <if test="authorityMark != null">
                    #{authorityMark,jdbcType=VARCHAR},
               </if>
               <if test="authorityName != null">
                    #{authorityName,jdbcType=VARCHAR},
               </if>
               <if test="authorityDesc != null">
                    #{authorityDesc,jdbcType=VARCHAR},
               </if>
               <if test="message != null">
                    #{message,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    #{moduleId,jdbcType=VARCHAR},
               </if>
          </trim>
     </insert>
     <select id="countByQuery" parameterType="com.linx.model.SysAuthoritiesQuery" resultType="java.lang.Integer">
          select count(*) from sys_authorities
          <if test="_parameter != null">
               <include refid="Query_Where_Clause" />
          </if>
     </select>
     <update id="updateByQuerySelective" parameterType="map">
          update sys_authorities
          <set>
               <if test="record.authorityId != null">
                    AUTHORITY_ID = #{record.authorityId,jdbcType=VARCHAR},
               </if>
               <if test="record.authorityMark != null">
                    AUTHORITY_MARK = #{record.authorityMark,jdbcType=VARCHAR},
               </if>
               <if test="record.authorityName != null">
                    AUTHORITY_NAME = #{record.authorityName,jdbcType=VARCHAR},
               </if>
               <if test="record.authorityDesc != null">
                    AUTHORITY_DESC = #{record.authorityDesc,jdbcType=VARCHAR},
               </if>
               <if test="record.message != null">
                    MESSAGE = #{record.message,jdbcType=VARCHAR},
               </if>
               <if test="record.enable != null">
                    ENABLE = #{record.enable,jdbcType=INTEGER},
               </if>
               <if test="record.issys != null">
                    ISSYS = #{record.issys,jdbcType=INTEGER},
               </if>
               <if test="record.moduleId != null">
                    MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
               </if>
          </set>
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByQuery" parameterType="map">
          update sys_authorities
          set AUTHORITY_ID = #{record.authorityId,jdbcType=VARCHAR},
               AUTHORITY_MARK = #{record.authorityMark,jdbcType=VARCHAR},
               AUTHORITY_NAME = #{record.authorityName,jdbcType=VARCHAR},
               AUTHORITY_DESC = #{record.authorityDesc,jdbcType=VARCHAR},
               MESSAGE = #{record.message,jdbcType=VARCHAR},
               ENABLE = #{record.enable,jdbcType=INTEGER},
               ISSYS = #{record.issys,jdbcType=INTEGER},
               MODULE_ID = #{record.moduleId,jdbcType=VARCHAR}
          <if test="_parameter != null">
               <include refid="Update_By_Query_Where_Clause" />
          </if>
     </update>
     <update id="updateByPrimaryKeySelective" parameterType="com.linx.model.SysAuthoritiesDo">
          update sys_authorities
          <set>
               <if test="authorityMark != null">
                    AUTHORITY_MARK = #{authorityMark,jdbcType=VARCHAR},
               </if>
               <if test="authorityName != null">
                    AUTHORITY_NAME = #{authorityName,jdbcType=VARCHAR},
               </if>
               <if test="authorityDesc != null">
                    AUTHORITY_DESC = #{authorityDesc,jdbcType=VARCHAR},
               </if>
               <if test="message != null">
                    MESSAGE = #{message,jdbcType=VARCHAR},
               </if>
               <if test="enable != null">
                    ENABLE = #{enable,jdbcType=INTEGER},
               </if>
               <if test="issys != null">
                    ISSYS = #{issys,jdbcType=INTEGER},
               </if>
               <if test="moduleId != null">
                    MODULE_ID = #{moduleId,jdbcType=VARCHAR},
               </if>
          </set>
          where AUTHORITY_ID = #{authorityId,jdbcType=VARCHAR}
     </update>
     <update id="updateByPrimaryKey" parameterType="com.linx.model.SysAuthoritiesDo">
          update sys_authorities
          set AUTHORITY_MARK = #{authorityMark,jdbcType=VARCHAR},
               AUTHORITY_NAME = #{authorityName,jdbcType=VARCHAR},
               AUTHORITY_DESC = #{authorityDesc,jdbcType=VARCHAR},
               MESSAGE = #{message,jdbcType=VARCHAR},
               ENABLE = #{enable,jdbcType=INTEGER},
               ISSYS = #{issys,jdbcType=INTEGER},
               MODULE_ID = #{moduleId,jdbcType=VARCHAR}
          where AUTHORITY_ID = #{authorityId,jdbcType=VARCHAR}
     </update>
</mapper>